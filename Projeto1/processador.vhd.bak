library IEEE;

use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity processador is
	Generic ( 
		DATA_WIDTH : natural := 8;
		ADDR_WIDTH : natural := 14; -- RAM - 14 bits/ ROM - 8 bits
		addrRAMWidth: natural:= 8;
		
		DATA_ROM_WIDTH: natural := 18;
		OPCODE_WIDTH: natural := 4;
		CONTROLWORD_WIDTH: natural := 11
	);
	port
	(
		-- Entradas (placa)
		CLOCK_50 : in std_logic; 
		SW : in std_logic_vector(17 downto 0); -- existem 18 - uso 16
		KEY : in std_logic_vector(3 downto 0); -- existem 4 - uso 2
		
		
		-- Saidas (placa)
		LEDR : out std_logic_vector(17 downto 0) := (others => '0');
		LEDG : out std_logic_vector(7 downto 0);
		
		HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7 : OUT STD_LOGIC_VECTOR(6 downto 0) --Saida para os displays
		
	);
end entity;

architecture processadorArch of processador is

signal barramentoLeituraDados, barramentoEscritaDados, out_mux_3 :	std_logic_vector(DATA_WIDTH-1 downto 0);
signal barramentoEnderecos : 										std_logic_vector(addrRAMWidth-1 downto 0);
signal instrucao : 													std_logic_vector(DATA_ROM_WIDTH-1 DOWNTO 0);
signal habilitaBlocos : 											std_logic_vector(3 DOWNTO 0);	-- blocos de habilitacoes
signal clk, out_fd_Z: 												std_logic;
signal out_uc_pontosDeControle: 									std_logic_vector(CONTROLWORD_WIDTH-1 DOWNTO 0);
signal out_fd_opcode:												std_logic_vector(OPCODE_WIDTH-1 DOWNTO 0);
--signal out_fd



alias habLeituraBarramento: 										std_logic is instrucao(DATA_ROM_WIDTH-1);
alias habEscritaBarramento: 										std_logic is instrucao(DATA_ROM_WIDTH-2);


begin
	clk <= CLOCK_50;

	UC: entity work.UC
				port map(
						opcode             	=> out_fd_opcode,
						Z_out_ula				=> out_fd_Z,
						pontosDeControle    	=> out_uc_pontosDeControle
				);

	FD: entity work.fluxo_de_dados
				port map(
						pontosDeControle	=> out_uc_pontosDeControle,
						dadosLeitura		=> out_mux_3,
						opcode				=> out_fd_opcode,
						dadoEscrita			=> out_mux_3,
						endereco				=> barramentoEnderecos,
						Z_out_ula			=> out_fd_Z,
						clk					=> clk
				);
